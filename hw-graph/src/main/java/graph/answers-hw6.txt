## CSE 331 HW6 Questions

NOTE: This file is used as part of HW6, and is not due as part of the HW5
submission. You may leave it blank for HW5.

## Part 1
###########################################################################

A few examples of possible Graph representations:

    A: A collection of nodes and a collection of edges.
    B: An adjacency list, in which each node is associated with a list of its outgoing edges.
    C: An adjacency matrix, which explicitly represents, for every pair ⟨A,B⟩ of nodes, whether there 
       is a link from A to B, and how many.

1. In two or three sentences, explain an advantage and a disadvantage of each of the
representations listed above (for example, in terms of runtime complexity, space
complexity, or ease of implementation).

A: Advantage:    Collections are easier to implement.
   Disadvantage: Collections do not maintain an order.
B: Advantage:    It reduces memory usage because it stores information in two-dimensional arrays.
                 Adding new nodes and searching through neighbor nodes takes less runtime than
                 adjacency matrices.
   Disadvantage: Finding a specific edge from A to B can take longer time, for it has to search
                 through the list of all edges.
C: Advantage:    Adjacency matrices make it easier to store constant factors and less runtime
                 to remove edges.
   Disadvantage: The space complexity of adjacency matrices is n * n, and higher runtime when
                 adding new nodes and searching through neighbor nodes.



2. In two to three sentences, describe the representation you chose and explain why you
chose it. If you chose to use a different representation than one of the three we described
above, be sure to list its advantages and disadvantages, too.

I chose an adjacency list, because I want to specify no duplicate labels with the same source
    and destination, but collections/sets allow duplicates; I also want to store information
    of each edge (weight of the edge), but an adjacency matrix stores only the number of edges.
    An adjacency list can work with both of these cases, which is why I chose it.



## Part 4
###########################################################################

    (Please keep your answers brief and to-the-point.)

1. Describe any new tests you added and why you added them, or why you feel that your original
tests alone are sufficient.




2. Did you make any changes to your specifications as you were implementing your Graph? (yes/no)
If yes, describe your changes and why you made them.



